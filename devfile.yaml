schemaVersion: 2.1.0
metadata:
  name: vertx-health-checks-nm
  namespace: opentlc-mgr-devspaces
projects:
  - name: vertx-health-checks-example-redhat
    zip:
      location: 'http://devfile-registry.devspaces-demo.svc:8080/resources/v2/vertx-health-checks-example-redhat.zip'
components:
  - attributes:
      app.kubernetes.io/name: tools
      che-theia.eclipse.org/vscode-extensions:
        - 'relative:extension/resources/github_com/redhat-developer/devspaces-vscode-extensions/releases/download/7_44-che-assets/java-0.82.0-369.vsix'
        - 'relative:extension/resources/github_com/fabric8-analytics/fabric8-analytics-vscode-extension/releases/download/0_2_1/fabric8-analytics-0.2.1.vsix'
        - 'relative:extension/resources/github_com/redhat-developer/devspaces-vscode-extensions/releases/download/7_44-che-assets/vscode-java-debug-0.26.0.vsix'
        - 'relative:extension/resources/open-vsx_org/api/vscjava/vscode-java-test/0_28_1/file/vscjava.vscode-java-test-0.28.1.vsix'
        - 'relative:extension/resources/github_com/microsoft/vscode-python/releases/download/2020_7_94776/ms-python-release.vsix'
        - 'relative:extension/resources/github_com/redhat-developer/devspaces-vscode-extensions/releases/download/ve96a2bb/vscode-yaml-0.14.0.vsix'
        - 'relative:extension/resources/open-vsx_org/api/redhat/ansible/1_0_93/file/redhat.ansible-1.0.93.vsix'
        - 'http://plugin-registry.devspaces-demo.svc:8080/resources/github_com/microsoft/vscode-python/releases/download/2020_7_94776/ms-python-release.vsix'
      che-theia.eclipse.org/vscode-preferences:
        java.server.launchMode: Standard
    container:
      args:
        - sh
        - '-c'
        - '${PLUGIN_REMOTE_ENDPOINT_EXECUTABLE}'
      endpoints:
        - exposure: public
          name: health-checks-endpoint
          protocol: http
          targetPort: 8080
      env:
        - name: PLUGIN_REMOTE_ENDPOINT_EXECUTABLE
          value: /remote-endpoint/plugin-remote-endpoint
        - name: THEIA_PLUGINS
          value: 'local-dir:///plugins/sidecars/tools'
        - name: CHE_DASHBOARD_URL
          value: 'https://devspaces.apps.cluster-gvpvj.gvpvj.sandbox1192.opentlc.com'
        - name: CHE_PLUGIN_REGISTRY_URL
          value: 'https://devspaces.apps.cluster-gvpvj.gvpvj.sandbox1192.opentlc.com/plugin-registry/v3'
        - name: CHE_PLUGIN_REGISTRY_INTERNAL_URL
          value: 'http://plugin-registry.devspaces-demo.svc:8080/v3'
      image: 'registry.redhat.io/devspaces/udi-rhel8@sha256:d55549aad15742f6f7310da0c7abc1e65dd5d3ad2e3efb8fbf414cf91b9efac7'
      memoryLimit: 3Gi
      mountSources: true
      sourceMapping: /projects
      volumeMounts:
        - name: m2
          path: /home/user/.m2
        - name: remote-endpoint
          path: /remote-endpoint
        - name: plugins
          path: /plugins
    name: tools
  - name: m2
    volume:
      size: 1G
commands:
  - exec:
      commandLine: mvn clean install
      component: tools
      group:
        kind: build
      workingDir: '${PROJECTS_ROOT}/vertx-health-checks-example-redhat'
    id: 1-build
  - exec:
      commandLine: 'mvn clean install && mvn -Dvertx.disableDnsResolver=true vertx:run'
      component: tools
      group:
        kind: run
      workingDir: '${PROJECTS_ROOT}/vertx-health-checks-example-redhat'
    id: 2-build-and-run
  - exec:
      commandLine: 'mvn -DskipTests vertx:debug'
      component: tools
      group:
        kind: debug
      workingDir: '${PROJECTS_ROOT}/vertx-health-checks-example-redhat'
    id: 3-run-in-debug-mode
  - exec:
      commandLine: mvn verify
      component: tools
      group:
        kind: debug
      workingDir: '${PROJECTS_ROOT}/vertx-health-checks-example-redhat'
    id: 4-run-tests
  - exec:
      commandLine: |
        echo
        echo "Before you can deploy this application to an openshift cluster,"
        echo "you must run 'oc login ...' in the tools terminal."
        echo
      component: tools
      group:
        kind: run
      workingDir: '${PROJECTS_ROOT}/vertx-health-checks-example-redhat'
    id: 5-log-into-deployment-cluster
  - exec:
      commandLine: 'mvn fabric8:deploy -Popenshift -DskipTests -Dvertx.disableDnsResolver=true'
      component: tools
      group:
        kind: run
      workingDir: '${PROJECTS_ROOT}/vertx-health-checks-example-redhat'
    id: 6-deploy-to-openshift
